@page "/librarians"
@using library_management_system.Services
@using library_management_system.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject DbApi DbApi
@inject AuthService AuthService
@inject AlertService AlertService

<PageTitle>Librarians</PageTitle>

<h1>Librarians</h1>

<AuthorizeView Roles="admin,librarian">
    <Authorized>
        

    <Modal @ref="modal" title="Modal title" IsVerticallyCentered="true" Size="ModalSize.ExtraLarge">
        <BodyTemplate>
            <Toasts class="p-3" Messages="AlertService.Messages" Placement="ToastsPlacement.TopRight"/>

            <div class="container">
                <p>Name</p>
                <input @bind="@Name"/>
            </div>

            <div class="container">
                <p>Surname</p>
                <input @bind="@Surname"/>
            </div>

            <div class="container">
                <p>Address</p>
                <input @bind="@Address"/>
            </div>

            <div class="container">
                <p>Phone number</p>
                <input @bind="@PhoneNumber"/>
            </div>

            <div class="container">
                <p>Email</p>
                <input @bind="@Email"/>
            </div>

            <div class="container">
                <p>Login</p>
                <input @bind="@Login"/>
            </div>

            <div class="container">
                <p>Password</p>
                <input @bind="@Password"/>
            </div>

            <div class="container">
                <p>Salary</p>
                <input type="number" @bind="@Salary"/>
            </div>


            <div class="container">
                <p>Position</p>
                <input @bind="@Position"/>
            </div>


        </BodyTemplate>
        <FooterTemplate>
            <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
            <Button Color="ButtonColor.Primary" @onclick="AddLibrarian">Add Librarian</Button>
        </FooterTemplate>
    </Modal>


    <Button Color="ButtonColor.Primary" @onclick="OnShowModalClick">Add Librarian</Button>
}

</Authorized>
</AuthorizeView>


@for (var i = librariansPerPage * (currentPageNumber - 1); i < librariansPerPage * currentPageNumber && i < LibrariansCount; i++)
{
    var i1 = i;
    <UserRecord User="@AllLibrarians[i1]"/>
}

<Pagination ActivePageNumber="@currentPageNumber"
            TotalPages="@(LibrariansCount / librariansPerPage)"
            PageChanged="OnPageChangedAsync"/>


@code {
    private int currentPageNumber = 1;
    private int librariansPerPage = 4;

    private Modal modal = default!;
    private string Name { get; set; }
    private string Surname { get; set; }
    private string Address { get; set; }
    private string PhoneNumber { get; set; }
    private string Email { get; set; }
    private string Login { get; set; }
    private string Password { get; set; }
    private double Salary { get; set; }
    private string Position { get; set; }

    private int LibrariansCount => AllLibrarians.Count;

    private List<User> AllLibrarians => DbApi.GetAllLibrarians();

    private async Task OnPageChangedAsync(int newPageNumber)
    {
        await Task.Run(() => { currentPageNumber = newPageNumber; });
    }

    private async void AddLibrarian()
    {
        @* try
        {
            DbApi.AddLibrarian(new User()
            {
                Name = Name,
                Surname = Surname,
                Address = Address,
                TelephoneNr = PhoneNumber,
            });

            AlertService.ShowSuccess("Librarian added successfully!");
        }
        catch (DbUpdateException e)
        {
            AlertService.ShowWarning("Something went wrong!");
        } *@
    }

    private async Task OnShowModalClick()
    {
        await modal.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal.HideAsync();
        AlertService.ClearMessages();
    }

}