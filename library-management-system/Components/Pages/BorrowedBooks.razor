@page "/borrowed-books"
@using library_management_system.Data
@using library_management_system.Services
@inject AuthService AuthService
@inject DbApi DbApi
@inject AlertService AlertService

<h3>Borrowed books</h3>

@foreach (var borrowedBook in AllBorrowedBooks)
{
    var book = DbApi.GetBook(borrowedBook.BookId)!;
    var deadline = borrowedBook.Deadline.ToString("dd/MM/yyyy");
    <Card Style="width:18rem;">
        <CardBody>
            <CardTitle>@book.Title</CardTitle>
            <CardText>
                <p>Author: @book.Author</p>
                <p>Publisher: @book.Publisher</p>
                <p>Publish Date: @book.PublishDate</p>
                <p>Category: @book.Category</p>
                <p>Deadline: @deadline</p>
                @if (string.Compare(deadline, DateTime.Now.ToString("dd/MM/yyyy"), StringComparison.Ordinal) > 0)
                {
                    <Button Color="ButtonColor.Primary" Size="Size.Large" @onclick="@(() => Postpone(borrowedBook))"> Postpone </Button>
                }

            </CardText>
        </CardBody>
    </Card>
}

<Toasts class="p-3" Messages="AlertService.Messages" Placement="ToastsPlacement.TopRight"/>


@code {
    private Reader? Reader => AuthService.User as Reader;
    private List<BorrowedBook> AllBorrowedBooks => DbApi.GetBorrowedBooks(Reader);

    private void Postpone(BorrowedBook borrowedBook)
    {
        DbApi.PostponeBorrowedBook(borrowedBook);
        AlertService.ShowSuccess("Postponed successfully!");
    }

}