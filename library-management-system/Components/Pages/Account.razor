@page "/account"
@rendermode InteractiveServer

@using library_management_system.Services
@using library_management_system.Model
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using library_management_system.Components.Shared

@inject AuthService AuthService
@inject AlertService AlertService
@inject AuthenticationStateProvider AuthenticationStateProvider

@inject ILogger<Account> Logger
@inject DbApi DbApi


<PageTitle>Account</PageTitle>

<AuthorizeView>
    <Authorized Context="wholePage">

        <div class="account-site">
            <div class="account-info">
                <UserRecord User="@(User)" />
            </div>
            
            <div class="actions">
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnShowChangeAvatarClick">Change avatar</Button>
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnShowChangeInfoClick">Change info</Button>
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnChangePasswordClick">Change password</Button>
            </div>
        </div>

        <ChangePasswordModal @ref="_changePasswordModal" User="User" />
        
        <Modal @ref="_avatarModal" Title="Change avatar" IsVerticallyCentered="true" Size="ModalSize.Large" OnHiding="OnHideModalClick">
            <BodyTemplate>
                <Toasts class="p-3" Messages="AlertService.Messages" Placement="ToastsPlacement.TopRight"/>

                <div class="common-page-styles">
                    <div class="avatar-select">
                        @foreach (var avatar in Avatars!)
                        {
                            var isSelected = SelectedAvatar == avatar;
                            <div class="avatar @(isSelected ? "selected" : "")">
                                <Button @onclick="() => SelectedAvatar = avatar">
                                    <img style="width: 100%; height: 100%" src="data:image/jpg;base64, @Convert.ToBase64String(avatar.Image!)" alt="No image"/>
                                </Button>
                            </div>
                        }
                    </div>
                </div>
            </BodyTemplate>
            <FooterTemplate>
                <Button Color="ButtonColor.Primary" @onclick="ChangeAvatar">Change avatar</Button>
            </FooterTemplate>
        </Modal>

        @* <Modal @ref="_infoModal" title="Change info" IsVerticallyCentered="true" Size="ModalSize.Regular"> *@
        @*     <BodyTemplate> *@
        @*         <Toasts class="p-3" Messages="AlertService.Messages" Placement="ToastsPlacement.TopRight"/> *@
        @* *@
        @*         <div> *@
        @*             <EditForm Model="Input" method="post" OnValidSubmit="ChangeInfo" *@
        @*                       FormName="register"> *@
        @*                 <div class="form-floating mb-3"> *@
        @*                     <InputText @bind-Value="User.Name" class="form-control" *@
        @*                                aria-required="true"/> *@
        @*                     <label>Name</label> *@
        @*                 </div> *@
        @*                 <div class="form-floating mb-3"> *@
        @*                     <InputText @bind-Value="User.Surname" class="form-control" *@
        @*                                aria-required="true"/> *@
        @*                     <label>Surname</label> *@
        @*                 </div> *@
        @*                 <div class="form-floating mb-3"> *@
        @*                     <InputText @bind-Value="User.Address" class="form-control" *@
        @*                                aria-required="true"/> *@
        @*                     <label>Address</label> *@
        @*                 </div> *@
        @*                 <div class="form-floating mb-3"> *@
        @*                     <InputText @bind-Value="User.TelephoneNr" class="form-control" *@
        @*                                aria-required="true"/> *@
        @*                     <label>Phone Number</label> *@
        @*                 </div> *@
        @* *@
        @*                 <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button> *@
        @*             </EditForm> *@
        @*         </div> *@
        @*     </BodyTemplate> *@
        @* </Modal> *@
    </Authorized>
    <NotAuthorized>
        <h1>Not authorized</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Modal _passwordModal = default!;
    private Modal _avatarModal = default!;
    private Modal _infoModal = default!;
    private User? User { get; set; }
    private List<Avatar>? Avatars { get; set; } = [];
    private Avatar? SelectedAvatar { get; set; }

    private ChangePasswordModal _changePasswordModal = default!;

    protected override Task OnInitializedAsync()
    {
        User = AuthService.GetUser(AuthenticationStateProvider).Result;
        Avatars = DbApi.GetAvatars();

        if (User != null && Avatars != null) return base.OnInitializedAsync();
        
        AlertService.ShowWarning("Failed to load data from the database. Please try again later.");
        User = new User();
        Avatars = [];

        return base.OnInitializedAsync();
    }
    
    private async Task OnChangePasswordClick()
    {
        await _changePasswordModal.Show();
    }
    
    private async Task OnShowChangeAvatarClick()
    {
        await _avatarModal.ShowAsync();
    }
    
    private async Task OnShowChangeInfoClick()
    {
        await _infoModal.ShowAsync();
    }
    
    private async Task OnHideModalClick()
    {
        await _passwordModal.HideAsync();
        await _avatarModal.HideAsync();
        await _infoModal.HideAsync();
        AlertService.ClearMessages();
    }

    
    
    private void ChangeAvatar()
    {
        User!.Avatar = SelectedAvatar;
        User.AvatarId = SelectedAvatar!.Id;

        var result = DbApi.SaveChanges();
        
        AlertService.ShowOperationResult(result);
    }
    
    private void ChangeInfo()
    {
        var result = DbApi.SaveChanges();
        
        AlertService.ShowOperationResult(result);
    }

    
    
}