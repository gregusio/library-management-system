@page "/account"
@rendermode InteractiveServer

@using library_management_system.Services
@using library_management_system.Model
@using library_management_system.Components.Shared

@inject AuthService authService
@inject AuthenticationStateProvider authenticationStateProvider


<PageTitle>Account</PageTitle>

<AuthorizeView>
    <Authorized Context="wholePage">

        <div class="account-site">
            <div class="account-info">
                <UserInfoCard User="User" ShowAvatar="true"/>
            </div>

            <div class="actions">
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnChangeAvatarClick">Change avatar</Button>
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnChangeUserInfoClick">Change info</Button>
                <Button Color="ButtonColor.Info" Size="Size.ExtraLarge" @onclick="OnChangePasswordClick">Change password</Button>
            </div>
        </div>

        <ChangeAvatarModal @ref="_changeAvatarModal" User="User" OnAvatarChanged="OnInitializedAsync"/>

        <ChangeUserInfoModal @ref="_changeUserInfoModal" User="User" OnInfoChanged="OnInitializedAsync"/>

        <ChangePasswordModal @ref="_changePasswordModal" User="User"/>
    </Authorized>
    <NotAuthorized>
        <h1>Not authorized</h1>
    </NotAuthorized>
</AuthorizeView>


@code {
    private User? User { get; set; }

    private ChangeAvatarModal _changeAvatarModal = default!;
    private ChangeUserInfoModal _changeUserInfoModal = default!;
    private ChangePasswordModal _changePasswordModal = default!;

    protected override Task OnInitializedAsync()
    {
        User = authService.GetUser(authenticationStateProvider).Result;

        return base.OnInitializedAsync();
    }

    private void OnChangePasswordClick()
    {
        _changePasswordModal.Show();
    }

    private void OnChangeAvatarClick()
    {
        _changeAvatarModal.Show();
    }

    private void OnChangeUserInfoClick()
    {
        _changeUserInfoModal.Show();
    }

}