@page "/readers"
@rendermode InteractiveServer

@using library_management_system.Model
@using library_management_system.Services
@using library_management_system.Components.Shared

@inject DbApi DbApi
@inject AlertService AlertService


<PageTitle>Readers</PageTitle>

<AuthorizeView Roles="admin,librarian">
    <Authorized Context="wholePage">

        <h1>Readers</h1>

        <AddUserModal Role="@(ERole.Reader)" OnAdd="OnInitializedAsync"/>

        <input @oninput="@(Search)"/>

        @for (var i = _readersPerPage * (_currentPageNumber - 1); i < _readersPerPage * _currentPageNumber && i < ReadersCount; i++)
        {
            var i1 = i;
            <UserRecord User="@(SelectedReaders![i1])"/>
        }

        <Pagination ActivePageNumber="@_currentPageNumber" TotalPages="@TotalPages" PageChanged="OnPageChangedAsync"/>

    </Authorized>
    <NotAuthorized>
        <h1>Not authorized</h1>
    </NotAuthorized>
</AuthorizeView>

@code {
    private int _currentPageNumber = 1;
    private readonly int _readersPerPage = 4;

    private int TotalPages => (ReadersCount - 1) / _readersPerPage + 1;

    private int ReadersCount => SelectedReaders!.Count;

    private List<User>? AllReaders { get; set; } = new();

    private List<User>? SelectedReaders { get; set; } = new();

    protected override Task OnInitializedAsync()
    {
        AllReaders = DbApi.GetAllReaders();

        if (AllReaders == null)
        {
            AlertService.ShowWarning("Failed to load readers. Please try again later.");
            AllReaders = new();
        }
        
        SelectedReaders = AllReaders;

        return base.OnInitializedAsync();
    }

    private async Task OnPageChangedAsync(int newPageNumber)
    {
        await Task.Run(() => { _currentPageNumber = newPageNumber; });
    }

    private async void Search(ChangeEventArgs e)
    {
        await Task.Run(() =>
        {
            SelectedReaders = AllReaders!.Where(reader => reader.Name!.Contains(e.Value!.ToString()!)).ToList();
            _currentPageNumber = 1;
        });
    }

}