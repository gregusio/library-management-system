@using library_management_system.Model
@using library_management_system.Services
@inject AuthService AuthService
@inject DbApi DbApi
@inject AlertService AlertService

@if (!editMode)
{
    <Card Style="width:18rem;">
        <CardBody>
            <CardTitle>@User.Name @User.Surname</CardTitle>
            <CardText>
                <p>Address: @User.Address</p>
                <p>Phone Number: @User.TelephoneNr</p>
                <p>Email: @User.Email</p>
            </CardText>
            <Button Color="ButtonColor.Primary" @onclick="EditMode">Edit</Button>
            <AuthorizeView Roles="admin,librarian">
                <Authorized>
                   <Button Color="ButtonColor.Primary" @onclick="OnShowReservedBooksClick">Show reserved books</Button>
                <Button Color="ButtonColor.Primary" @onclick="OnShowBorrowedBooksClick">Show borrowed books</Button>
            
                </Authorized>
            </AuthorizeView>
        </CardBody>
    </Card>
}
else
{
    <Card Style="width:18rem;">
        <CardBody>
            <CardTitle>
                <input @bind="@User.Name"/> <input @bind="@User.Surname"/>
            </CardTitle>
            <CardText>
                <p>Address: <input @bind="@User.Address"/></p>
                <p>Phone Number: <input @bind="@User.TelephoneNr"/></p>
                <p>Email: @User.Email</p>
            </CardText>
            <Button Color="ButtonColor.Primary" @onclick="CloseEditMode">Exit</Button>
            <Button Color="ButtonColor.Primary" @onclick="CloseAndSave">Save</Button>
        </CardBody>
    </Card>
}


<Modal @ref="modal1" title="Modal title" IsVerticallyCentered="true" Size="ModalSize.ExtraLarge">
    <BodyTemplate>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Author</th>
                <th scope="col">Deadline</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var borrowedBook in BorrowedBooks)
            {
                var book = DbApi.GetBook(borrowedBook.BookId);
                <tr>
                    <td>@(book.Title)</td>
                    <td>@(book.Author)</td>
                    <td>@(borrowedBook.Deadline)</td>
                </tr>
            }
            </tbody>
        </table>
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

<Modal @ref="modal2" title="Modal title" IsVerticallyCentered="true" Size="ModalSize.ExtraLarge">
    <BodyTemplate>
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Author</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var reservedBook in ReservedBooks)
            {
                var book = DbApi.GetBook(reservedBook.BookId);
                <tr>
                    <td>@(book.Title)</td>
                    <td>@(book.Author)</td>
                </tr>
            }
            </tbody>
        </table>
    </BodyTemplate>
    <FooterTemplate>
    </FooterTemplate>
</Modal>

<Toasts class="p-3" Messages="AlertService.Messages" Placement="ToastsPlacement.TopRight"/>


@code {
    [Parameter] public User User { get; set; }
    private bool editMode = false;
    private string? Name { get; set; }
    private string? Surname { get; set; }
    private string? Address { get; set; }
    private string? TelephoneNr { get; set; }
    private string? EmailAddress { get; set; }

    private Modal modal1 = default!;
    private Modal modal2 = default!;

    private List<BorrowedBook> BorrowedBooks => DbApi.GetBorrowedBooks(User);

    private List<ReservedBook> ReservedBooks => DbApi.GetReservedBooks(User);

    private void SaveState()
    {
        Name = User.Name;
        Surname = User.Surname;
        Address = User.Address;
        TelephoneNr = User.TelephoneNr;
    }

    private void UndoChanges()
    {
        User.Name = Name;
        User.Surname = Surname;
        User.Address = Address;
        User.TelephoneNr = TelephoneNr;
    }

    private void EditMode()
    {
        SaveState();
        editMode = true;
    }

    private void CloseEditMode()
    {
        UndoChanges();
        editMode = false;
    }

    private void CloseAndSave()
    {
        DbApi.SaveChanges();
        AlertService.ShowSuccess("Changes saved!");
        editMode = false;
    }

    private async Task OnShowReservedBooksClick()
    {
        await modal2.ShowAsync();
    }

    private async Task OnShowBorrowedBooksClick()
    {
        await modal1.ShowAsync();
    }

    private async Task OnHideModalClick()
    {
        await modal1.HideAsync();
        await modal2.HideAsync();
        AlertService.ClearMessages();
    }

}