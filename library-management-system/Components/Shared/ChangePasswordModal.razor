@using library_management_system.Model
@using library_management_system.Services
@using Microsoft.AspNetCore.Identity

@inject AlertService alertService
@inject UserManager<User> userManager


<Modal @ref="_modal" title="Change password" IsVerticallyCentered="true" Size="ModalSize.Regular" OnHiding="OnHideModal">
    <BodyTemplate>
        <Toasts class="p-3" Messages="alertService.Messages" Placement="ToastsPlacement.TopRight"/>

        <div class="row">
            <EditForm Model="Input" FormName="change-password" OnValidSubmit="OnValidSubmitAsync" method="post">
                <DataAnnotationsValidator/>
                <ValidationSummary class="text-danger" role="alert"/>

                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.OldPassword" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password."/>
                    <label class="form-label">Old password</label>
                    <ValidationMessage For="() => Input.OldPassword" class="text-danger"/>
                </div>

                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.NewPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password."/>
                    <label class="form-label">New password</label>
                    <ValidationMessage For="() => Input.NewPassword" class="text-danger"/>
                </div>

                <div class="form-floating mb-3">
                    <InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="Please confirm your new password."/>
                    <label class="form-label">Confirm password</label>
                    <ValidationMessage For="() => Input.ConfirmPassword" class="text-danger"/>
                </div>

                <button type="submit" class="w-100 btn btn-lg btn-primary">Update password</button>
            </EditForm>
        </div>
    </BodyTemplate>
</Modal>


@code {
    [Parameter] public User? User { get; set; }

    private Modal _modal = default!;
    private ChangePasswordInputModel Input { get; set; } = new();

    public void Show()
    { 
        _modal.ShowAsync();
    }

    private void OnHideModal()
    {
        _modal.HideAsync();
        Input = new ChangePasswordInputModel();
        alertService.ClearMessages();
    }

    private async Task OnValidSubmitAsync()
    {
        var changePasswordResult = await userManager.ChangePasswordAsync(User!, Input.OldPassword, Input.NewPassword);

        if (changePasswordResult.Succeeded)
        {
            alertService.ShowSuccess("Your password has been changed.");
            Input = new ChangePasswordInputModel();

            return;
        }

        alertService.ShowWarning("Something went wrong. Please try again.");
    }

}