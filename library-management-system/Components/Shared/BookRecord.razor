@using library_management_system.Model
@using library_management_system.Services

@inject DbApi DbApi
@inject AuthService AuthService
@inject AlertService AlertService
@inject AuthenticationStateProvider AuthenticationStateProvider


<Card Style="width:100%; height: 100%">
    <img class="image-style" src="data:image/jpg;base64, @Convert.ToBase64String(BookCover!.Image!)" alt="Card image cap" />
    <CardBody Style="align-content: end">
        <CardTitle>@Book.Title</CardTitle>
        <CardText>
            <p>ISBN: @Book.ISBN</p>
            <p>Author: @Book.Author</p>
            <p>Publisher: @Book.Publisher</p>
            <p>Publish Date: @Book.PublishDate</p>
            <p>Category: @Book.Category</p>
            <p>Available: @BookInventory!.AvailableCopies</p>
        </CardText>
    </CardBody>
</Card>


@code {
    [Parameter] public required Book Book { get; set; }
    
    private BookInventory? BookInventory { get; set; }
    private BookCover? BookCover => Book.BookCover;

    protected override Task OnInitializedAsync()
    {
        BookInventory = DbApi.GetBookInventory(Book);

        if (BookInventory != null) return base.OnInitializedAsync();
        
        BookInventory = new BookInventory
        {
            BookId = Book.Id,
            Book = Book,
            AvailableCopies = 0,
            BorrowedCopies = 0,
            ReservedCopies = 0
        };

        AlertService.ShowInfo("Book Inventory not found, something went wrong.");

        return base.OnInitializedAsync();
    }

}